FDs:

Events:
R(name, date, description, startTime, endTime, location)
Name, date-> description, startTime, endTime, location
English: The name and the date of an event uniquely define an event, and thus imply its description, location and start/end times.

Does not violate BCNF, as (name, date) is a key.
As such, it is also in 3NF.

GameInstances:
R(id, gameTitle, borrowed, datePurchased, language)
id, gameTitle -> borrowed, datePurchased, language
English: A game instance is a weak entity belonging to Game. It refers to the multiple copies the club can carry of a certain game. It's ID number and game title uniquely define whether the copy's date of purchase and language, as well as if it is currently being borrowed.

Does not violate BCNF, as (id, title) is a key.
As such, it is also in 3NF.

Games:
R(title, rating, minPlayer, maxPlayer, minPlayTime, maxPlayTime, yearPublished, description, difficulty)
title -> rating, minPlayer, maxPlayer, minPlayTime, maxPlayTime, yearPublished, description, difficulty
English: A game is uniquely identified by its title. Thus its title will imply the game's rating, min/max players, min/max play time, year published, description and difficulty level.

Does not violate BCNF, as (title) is a key.
As such, it is also in 3NF.


Publishers:
R(name, email, country)
name -> email, country
English: A publisher is uniquely identified by their company name. Their company name will thus imply their email and country of origin.

Does not violate BCNF, as (name) is a key.
As such, it is also in 3NF.

BorrowRecord:
R(recordID, expectedReturnDate, actualReturnDate, dateBorrowed, timeBorrowed, memberNumber, execNumber)
recordID -> expectedReturnDate, actualReturnDate, dateBorrowed, timeBorrowed, memberNumber, execNumber
English: A borrow record is uniquely identified by its record ID number. It's ID will thus imply its expected and actual return date, borrow date, borrow time, the borrowing member's number and the member number of the executive who gave approval.

Does not violate BCNF, as (recordID) is a key.
As such, it is also in 3NF.

Executives:
R(memberNumber, position)
memberNumber -> position
English: An executive is defined by their member number, which will imply their position.

Does not violate BCNF, as (memberNumber) is a key.
As such, it is also in 3NF.

Members:
R(memberNumber, year, name, phoneNumber, email)
memberNumber -> name, email, phoneNumber, year
English: A member is defined uniquely by their member number. Their number thus implies their name, email address, phone number and school year level.

Does not violate BCNF, as (memberNumber) is a key.
As such, it is also in 3NF.

Genres:
R(name)
name -> name
English: The genre table contains the list of all possible genres

Does not violate BCNF, as (name) is a key.
As such, it is also in 3NF.

HasGenre:
R(gameTitle, genreName)
gameTitle, genreName -> gameTitle, genreName
English: The HasGenre table maintains the many-to-many relationship between games and genres.

Does not violate BCNF, as (gameTitle, genreName) is a key.
As such, it is also in 3NF.

Attends:
R(memberNumber, eventName, eventDate)
memberNumber, eventName, eventDate -> memberNumber, eventName, eventDate
English: The Attends table maintains the many-to-many relationship between members and events.

Does not violate BCNF, as (memberNumber, eventName, eventDate) is a key.
As such, it is also in 3NF.

Hosts:
R(memberNumber, eventName, eventDate)
memberNumber, eventName, eventDate -> memberNumber, eventName, eventDate
English: The Hosts table maintains the many-to-many relationship between executives who are hosting the events and the events themselves

Does not violate BCNF, as (memberNumber, eventName, eventDate) is a key.
As such, it is also in 3NF.

PublishedBy:
R(publisherName, gameTitle)
publisherName, gameTitle -> publisherName, gameTitle
English: The PublishedBy table maintains the many-to-many relationship between publishers and games

Does not violate BCNF, as (publisherName, gameTitle) is a key.
As such, it is also in 3NF.

Contains:
R(recordID, gameID, gameTitle)
recordID, gameID, gameTitle -> recordID, gameID, gameTitle
English: The Contains table maintains the many-to-many relationship between club-owned copies of a game and the borrow record that borrows those games.

Does not violate BCNF, as (recordID, gameID, gameTitle) is a key.
As such, it is also in 3NF.